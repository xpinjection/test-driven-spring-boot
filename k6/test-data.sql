-- Performance Test Data
-- Generates 550 book records distributed across 10 authors
-- Authors match those used in k6/search-books-test.js

-- Martin Fowler books (55 records)
INSERT INTO book (name, author) VALUES
('Refactoring: Improving the Design of Existing Code', 'Martin Fowler'),
('Patterns of Enterprise Application Architecture', 'Martin Fowler'),
('Domain-Specific Languages', 'Martin Fowler'),
('UML Distilled', 'Martin Fowler'),
('Analysis Patterns', 'Martin Fowler'),
('Refactoring to Patterns', 'Martin Fowler'),
('Planning Extreme Programming', 'Martin Fowler'),
('NoSQL Distilled', 'Martin Fowler'),
('Continuous Integration', 'Martin Fowler'),
('Refactoring Databases', 'Martin Fowler'),
('Enterprise Integration Patterns', 'Martin Fowler'),
('Service Design Patterns', 'Martin Fowler'),
('Microservices Architecture', 'Martin Fowler'),
('Cloud Native Patterns', 'Martin Fowler'),
('Event-Driven Architecture', 'Martin Fowler'),
('API Design Patterns', 'Martin Fowler'),
('Database Refactoring Cookbook', 'Martin Fowler'),
('Legacy Code Modernization', 'Martin Fowler'),
('Software Architecture Patterns', 'Martin Fowler'),
('Evolutionary Architecture', 'Martin Fowler'),
('Testing Patterns', 'Martin Fowler'),
('Agile Development Practices', 'Martin Fowler'),
('Continuous Delivery Pipeline', 'Martin Fowler'),
('Feature Toggles', 'Martin Fowler'),
('Branch By Abstraction', 'Martin Fowler'),
('Strangler Fig Pattern', 'Martin Fowler'),
('Anti-Corruption Layer', 'Martin Fowler'),
('Repository Pattern', 'Martin Fowler'),
('Unit of Work Pattern', 'Martin Fowler'),
('Data Mapper Pattern', 'Martin Fowler'),
('Active Record Pattern', 'Martin Fowler'),
('Table Data Gateway', 'Martin Fowler'),
('Row Data Gateway', 'Martin Fowler'),
('Transaction Script', 'Martin Fowler'),
('Domain Model Pattern', 'Martin Fowler'),
('Service Layer Pattern', 'Martin Fowler'),
('Remote Facade', 'Martin Fowler'),
('Data Transfer Object', 'Martin Fowler'),
('Front Controller', 'Martin Fowler'),
('Application Controller', 'Martin Fowler'),
('Command Pattern Implementation', 'Martin Fowler'),
('Gateway Pattern', 'Martin Fowler'),
('Mapper Pattern', 'Martin Fowler'),
('Layer Supertype', 'Martin Fowler'),
('Separated Interface', 'Martin Fowler'),
('Registry Pattern', 'Martin Fowler'),
('Value Object Pattern', 'Martin Fowler'),
('Money Pattern', 'Martin Fowler'),
('Special Case Pattern', 'Martin Fowler'),
('Plugin Pattern', 'Martin Fowler'),
('Service Stub', 'Martin Fowler'),
('Record Set Pattern', 'Martin Fowler'),
('Optimistic Offline Lock', 'Martin Fowler'),
('Pessimistic Offline Lock', 'Martin Fowler'),
('Coarse Grained Lock', 'Martin Fowler');

-- Robert Martin books (55 records)
INSERT INTO book (name, author) VALUES
('Clean Code', 'Robert Martin'),
('Clean Architecture', 'Robert Martin'),
('The Clean Coder', 'Robert Martin'),
('Agile Software Development', 'Robert Martin'),
('Clean Craftsmanship', 'Robert Martin'),
('UML for Java Programmers', 'Robert Martin'),
('Designing Object-Oriented C++', 'Robert Martin'),
('Clean Agile', 'Robert Martin'),
('SOLID Principles Explained', 'Robert Martin'),
('Single Responsibility Principle', 'Robert Martin'),
('Open-Closed Principle', 'Robert Martin'),
('Liskov Substitution Principle', 'Robert Martin'),
('Interface Segregation Principle', 'Robert Martin'),
('Dependency Inversion Principle', 'Robert Martin'),
('Software Professionalism', 'Robert Martin'),
('Test Driven Development Guide', 'Robert Martin'),
('Refactoring Legacy Systems', 'Robert Martin'),
('Architecture Patterns', 'Robert Martin'),
('Component Design', 'Robert Martin'),
('Package Principles', 'Robert Martin'),
('Acyclic Dependencies', 'Robert Martin'),
('Stable Dependencies', 'Robert Martin'),
('Stable Abstractions', 'Robert Martin'),
('Common Closure Principle', 'Robert Martin'),
('Common Reuse Principle', 'Robert Martin'),
('Release Reuse Equivalency', 'Robert Martin'),
('Software Design Philosophy', 'Robert Martin'),
('Professional Software Development', 'Robert Martin'),
('Extreme Programming Practices', 'Robert Martin'),
('Object Oriented Design Metrics', 'Robert Martin'),
('Software Craftsmanship Values', 'Robert Martin'),
('Code Quality Metrics', 'Robert Martin'),
('Functional Programming Concepts', 'Robert Martin'),
('Architectural Boundaries', 'Robert Martin'),
('Plugin Architecture', 'Robert Martin'),
('Screaming Architecture', 'Robert Martin'),
('Hexagonal Architecture', 'Robert Martin'),
('Ports and Adapters', 'Robert Martin'),
('Humble Object Pattern', 'Robert Martin'),
('Partial Boundaries', 'Robert Martin'),
('Layers and Boundaries', 'Robert Martin'),
('Main Component', 'Robert Martin'),
('Services Great and Small', 'Robert Martin'),
('Test Boundaries', 'Robert Martin'),
('Clean Embedded Systems', 'Robert Martin'),
('Database as Detail', 'Robert Martin'),
('Web is a Detail', 'Robert Martin'),
('Frameworks are Details', 'Robert Martin'),
('Case Study: Video Sales', 'Robert Martin'),
('Independence of Details', 'Robert Martin'),
('Business Rules', 'Robert Martin'),
('Screaming Use Cases', 'Robert Martin'),
('Decoupling Layers', 'Robert Martin'),
('Decoupling Use Cases', 'Robert Martin'),
('Decoupling Mode', 'Robert Martin');

-- Kent Beck books (55 records)
INSERT INTO book (name, author) VALUES
('Test Driven Development', 'Kent Beck'),
('Extreme Programming Explained', 'Kent Beck'),
('Implementation Patterns', 'Kent Beck'),
('Smalltalk Best Practice Patterns', 'Kent Beck'),
('Test-Driven Development by Example', 'Kent Beck'),
('Extreme Programming Adventures', 'Kent Beck'),
('Planning XP', 'Kent Beck'),
('Testing XP', 'Kent Beck'),
('XP Installed', 'Kent Beck'),
('JUnit Pocket Guide', 'Kent Beck'),
('Simple Design Rules', 'Kent Beck'),
('Refactoring Workbook', 'Kent Beck'),
('Patterns for Time-Triggered Systems', 'Kent Beck'),
('Continuous Integration Patterns', 'Kent Beck'),
('Pair Programming Illuminated', 'Kent Beck'),
('Collective Code Ownership', 'Kent Beck'),
('Coding Standards', 'Kent Beck'),
('Metaphor in Software', 'Kent Beck'),
('Sustainable Pace', 'Kent Beck'),
('On-Site Customer', 'Kent Beck'),
('Small Releases', 'Kent Beck'),
('Simple Design', 'Kent Beck'),
('Evolutionary Design', 'Kent Beck'),
('Incremental Design', 'Kent Beck'),
('Emergent Design', 'Kent Beck'),
('Agile Testing', 'Kent Beck'),
('Acceptance Testing', 'Kent Beck'),
('User Stories Applied', 'Kent Beck'),
('Story Estimation', 'Kent Beck'),
('Iteration Planning', 'Kent Beck'),
('Release Planning', 'Kent Beck'),
('Sprint Planning', 'Kent Beck'),
('Daily Standup', 'Kent Beck'),
('Retrospective Patterns', 'Kent Beck'),
('Continuous Deployment', 'Kent Beck'),
('Feature Flags', 'Kent Beck'),
('Dark Launching', 'Kent Beck'),
('Canary Releases', 'Kent Beck'),
('Blue-Green Deployment', 'Kent Beck'),
('Rolling Deployment', 'Kent Beck'),
('Code Review Best Practices', 'Kent Beck'),
('Mob Programming', 'Kent Beck'),
('Solo Programming', 'Kent Beck'),
('Remote Pair Programming', 'Kent Beck'),
('Test Automation Strategies', 'Kent Beck'),
('Unit Testing Patterns', 'Kent Beck'),
('Integration Testing Guide', 'Kent Beck'),
('End-to-End Testing', 'Kent Beck'),
('Performance Testing', 'Kent Beck'),
('Load Testing Strategies', 'Kent Beck'),
('Stress Testing', 'Kent Beck'),
('Security Testing', 'Kent Beck'),
('Usability Testing', 'Kent Beck'),
('Exploratory Testing', 'Kent Beck'),
('Testing in Production', 'Kent Beck');

-- Eric Evans books (55 records)
INSERT INTO book (name, author) VALUES
('Domain-Driven Design', 'Eric Evans'),
('Domain-Driven Design Reference', 'Eric Evans'),
('Strategic Design', 'Eric Evans'),
('Tactical Design', 'Eric Evans'),
('Ubiquitous Language', 'Eric Evans'),
('Bounded Context', 'Eric Evans'),
('Context Mapping', 'Eric Evans'),
('Aggregates', 'Eric Evans'),
('Entities and Value Objects', 'Eric Evans'),
('Domain Events', 'Eric Evans'),
('Repositories in DDD', 'Eric Evans'),
('Factories in DDD', 'Eric Evans'),
('Services in DDD', 'Eric Evans'),
('Modules in DDD', 'Eric Evans'),
('Layered Architecture', 'Eric Evans'),
('Model-Driven Design', 'Eric Evans'),
('Hands-On Modelers', 'Eric Evans'),
('Refactoring Toward Deeper Insight', 'Eric Evans'),
('Deep Models', 'Eric Evans'),
('Supple Design', 'Eric Evans'),
('Intention-Revealing Interfaces', 'Eric Evans'),
('Side-Effect-Free Functions', 'Eric Evans'),
('Assertions', 'Eric Evans'),
('Conceptual Contours', 'Eric Evans'),
('Standalone Classes', 'Eric Evans'),
('Closure of Operations', 'Eric Evans'),
('Declarative Design', 'Eric Evans'),
('Declarative Style', 'Eric Evans'),
('Angle of Attack', 'Eric Evans'),
('Strategic Design Patterns', 'Eric Evans'),
('Context Map Patterns', 'Eric Evans'),
('Partnership', 'Eric Evans'),
('Shared Kernel', 'Eric Evans'),
('Customer-Supplier', 'Eric Evans'),
('Conformist', 'Eric Evans'),
('Anticorruption Layer', 'Eric Evans'),
('Open Host Service', 'Eric Evans'),
('Published Language', 'Eric Evans'),
('Separate Ways', 'Eric Evans'),
('Big Ball of Mud', 'Eric Evans'),
('Core Domain', 'Eric Evans'),
('Generic Subdomains', 'Eric Evans'),
('Supporting Subdomains', 'Eric Evans'),
('Domain Vision Statement', 'Eric Evans'),
('Highlighted Core', 'Eric Evans'),
('Cohesive Mechanisms', 'Eric Evans'),
('Segregated Core', 'Eric Evans'),
('Abstract Core', 'Eric Evans'),
('Evolving Order', 'Eric Evans'),
('System Metaphor', 'Eric Evans'),
('Responsibility Layers', 'Eric Evans'),
('Knowledge Level', 'Eric Evans'),
('Pluggable Component Framework', 'Eric Evans'),
('Large-Scale Structure', 'Eric Evans'),
('Distillation', 'Eric Evans');

-- Michael Feathers books (55 records)
INSERT INTO book (name, author) VALUES
('Working Effectively with Legacy Code', 'Michael Feathers'),
('Legacy Code Characterization Tests', 'Michael Feathers'),
('Seam Model', 'Michael Feathers'),
('Object Seam', 'Michael Feathers'),
('Link Seam', 'Michael Feathers'),
('Preprocessing Seam', 'Michael Feathers'),
('Sensing and Separation', 'Michael Feathers'),
('Fake Objects', 'Michael Feathers'),
('Mock Objects', 'Michael Feathers'),
('Test Harness', 'Michael Feathers'),
('Characterization Testing', 'Michael Feathers'),
('Dependency Breaking', 'Michael Feathers'),
('Extract Interface', 'Michael Feathers'),
('Extract Implementer', 'Michael Feathers'),
('Extract and Override', 'Michael Feathers'),
('Break Dependencies', 'Michael Feathers'),
('Sprout Method', 'Michael Feathers'),
('Sprout Class', 'Michael Feathers'),
('Wrap Method', 'Michael Feathers'),
('Wrap Class', 'Michael Feathers'),
('Adapt Parameter', 'Michael Feathers'),
('Break Out Method Object', 'Michael Feathers'),
('Primitivize Parameter', 'Michael Feathers'),
('Pull Up Feature', 'Michael Feathers'),
('Push Down Dependency', 'Michael Feathers'),
('Replace Function with Function Pointer', 'Michael Feathers'),
('Replace Global Reference', 'Michael Feathers'),
('Subclass and Override', 'Michael Feathers'),
('Supersede Instance Variable', 'Michael Feathers'),
('Template Redefinition', 'Michael Feathers'),
('Text Redefinition', 'Michael Feathers'),
('Parameterize Constructor', 'Michael Feathers'),
('Parameterize Method', 'Michael Feathers'),
('Extract Interface for Test', 'Michael Feathers'),
('Encapsulate Global References', 'Michael Feathers'),
('Expose Static Method', 'Michael Feathers'),
('Introduce Instance Delegator', 'Michael Feathers'),
('Introduce Static Setter', 'Michael Feathers'),
('Link Substitution', 'Michael Feathers'),
('Preserve Signatures', 'Michael Feathers'),
('Replace Function Pointer', 'Michael Feathers'),
('The Legacy Code Change Algorithm', 'Michael Feathers'),
('Testing Legacy Code', 'Michael Feathers'),
('Refactoring Legacy Code', 'Michael Feathers'),
('Code Smells', 'Michael Feathers'),
('Technical Debt', 'Michael Feathers'),
('Big Ball of Mud Refactoring', 'Michael Feathers'),
('Monster Method', 'Michael Feathers'),
('God Class', 'Michael Feathers'),
('Feature Envy', 'Michael Feathers'),
('Shotgun Surgery', 'Michael Feathers'),
('Divergent Change', 'Michael Feathers'),
('Primitive Obsession', 'Michael Feathers'),
('Data Clumps', 'Michael Feathers'),
('Refused Bequest', 'Michael Feathers');

-- Joshua Bloch books (55 records)
INSERT INTO book (name, author) VALUES
('Effective Java', 'Joshua Bloch'),
('Java Concurrency in Practice', 'Joshua Bloch'),
('Java Puzzlers', 'Joshua Bloch'),
('Effective Java Third Edition', 'Joshua Bloch'),
('Consider Static Factory Methods', 'Joshua Bloch'),
('Builder Pattern', 'Joshua Bloch'),
('Singleton Enforcement', 'Joshua Bloch'),
('Noninstantiability', 'Joshua Bloch'),
('Dependency Injection', 'Joshua Bloch'),
('Unnecessary Object Creation', 'Joshua Bloch'),
('Memory Leaks', 'Joshua Bloch'),
('Finalizers and Cleaners', 'Joshua Bloch'),
('Try-with-resources', 'Joshua Bloch'),
('Override equals', 'Joshua Bloch'),
('Override hashCode', 'Joshua Bloch'),
('Override toString', 'Joshua Bloch'),
('Override clone', 'Joshua Bloch'),
('Comparable Interface', 'Joshua Bloch'),
('Minimize Mutability', 'Joshua Bloch'),
('Favor Composition', 'Joshua Bloch'),
('Interface Over Abstract Class', 'Joshua Bloch'),
('Design Interfaces', 'Joshua Bloch'),
('Marker Interfaces', 'Joshua Bloch'),
('Nested Classes', 'Joshua Bloch'),
('Raw Types', 'Joshua Bloch'),
('Generic Methods', 'Joshua Bloch'),
('Generic Types', 'Joshua Bloch'),
('Bounded Wildcards', 'Joshua Bloch'),
('Type Safe Heterogeneous Containers', 'Joshua Bloch'),
('Enum Types', 'Joshua Bloch'),
('Ordinal Method', 'Joshua Bloch'),
('EnumSet and EnumMap', 'Joshua Bloch'),
('Strategy Pattern with Enums', 'Joshua Bloch'),
('Annotation Processing', 'Joshua Bloch'),
('Naming Conventions', 'Joshua Bloch'),
('Standard Exceptions', 'Joshua Bloch'),
('Exception Translation', 'Joshua Bloch'),
('Failure Atomicity', 'Joshua Bloch'),
('Checked vs Unchecked', 'Joshua Bloch'),
('Optimize Judiciously', 'Joshua Bloch'),
('Adhere to Naming', 'Joshua Bloch'),
('Local Variables', 'Joshua Bloch'),
('For-each Loops', 'Joshua Bloch'),
('Library Functions', 'Joshua Bloch'),
('Exact Arithmetic', 'Joshua Bloch'),
('Primitive Types', 'Joshua Bloch'),
('String Concatenation', 'Joshua Bloch'),
('Object References', 'Joshua Bloch'),
('Reflection Usage', 'Joshua Bloch'),
('Native Methods', 'Joshua Bloch'),
('Serialization', 'Joshua Bloch'),
('Serialization Proxy', 'Joshua Bloch'),
('Thread Safety', 'Joshua Bloch'),
('Synchronization', 'Joshua Bloch'),
('Wait and Notify', 'Joshua Bloch'),
('Concurrent Collections', 'Joshua Bloch');

-- Erich Gamma books (55 records)
INSERT INTO book (name, author) VALUES
('Design Patterns Elements', 'Erich Gamma'),
('Contributing to Eclipse', 'Erich Gamma'),
('JUnit Framework', 'Erich Gamma'),
('Eclipse Plugin Development', 'Erich Gamma'),
('Abstract Factory', 'Erich Gamma'),
('Builder Design Pattern', 'Erich Gamma'),
('Factory Method', 'Erich Gamma'),
('Prototype Pattern', 'Erich Gamma'),
('Singleton Pattern', 'Erich Gamma'),
('Adapter Pattern', 'Erich Gamma'),
('Bridge Pattern', 'Erich Gamma'),
('Composite Pattern', 'Erich Gamma'),
('Decorator Pattern', 'Erich Gamma'),
('Facade Pattern', 'Erich Gamma'),
('Flyweight Pattern', 'Erich Gamma'),
('Proxy Pattern', 'Erich Gamma'),
('Chain of Responsibility', 'Erich Gamma'),
('Command Pattern', 'Erich Gamma'),
('Interpreter Pattern', 'Erich Gamma'),
('Iterator Pattern', 'Erich Gamma'),
('Mediator Pattern', 'Erich Gamma'),
('Memento Pattern', 'Erich Gamma'),
('Observer Pattern', 'Erich Gamma'),
('State Pattern', 'Erich Gamma'),
('Strategy Pattern', 'Erich Gamma'),
('Template Method', 'Erich Gamma'),
('Visitor Pattern', 'Erich Gamma'),
('Creational Patterns', 'Erich Gamma'),
('Structural Patterns', 'Erich Gamma'),
('Behavioral Patterns', 'Erich Gamma'),
('Pattern Language', 'Erich Gamma'),
('Design Pattern Catalog', 'Erich Gamma'),
('Pattern Selection', 'Erich Gamma'),
('Pattern Implementation', 'Erich Gamma'),
('Pattern Relations', 'Erich Gamma'),
('Pattern History', 'Erich Gamma'),
('Pattern Forces', 'Erich Gamma'),
('Pattern Context', 'Erich Gamma'),
('Pattern Solution', 'Erich Gamma'),
('Pattern Consequences', 'Erich Gamma'),
('Pattern Examples', 'Erich Gamma'),
('Pattern Applications', 'Erich Gamma'),
('Pattern Benefits', 'Erich Gamma'),
('Pattern Liabilities', 'Erich Gamma'),
('Pattern Variations', 'Erich Gamma'),
('Known Uses', 'Erich Gamma'),
('Related Patterns', 'Erich Gamma'),
('Eclipse Architecture', 'Erich Gamma'),
('Platform Runtime', 'Erich Gamma'),
('Workspace Resources', 'Erich Gamma'),
('Team Support', 'Erich Gamma'),
('Debug Support', 'Erich Gamma'),
('JDT Core', 'Erich Gamma'),
('UI Workbench', 'Erich Gamma'),
('SWT Graphics', 'Erich Gamma');

-- Gang of Four books (55 records)
INSERT INTO book (name, author) VALUES
('Design Patterns', 'Gang of Four'),
('Object-Oriented Design', 'Gang of Four'),
('Software Reuse', 'Gang of Four'),
('Design Pattern Elements', 'Gang of Four'),
('Reusable Components', 'Gang of Four'),
('Object-Oriented Programming', 'Gang of Four'),
('Class Inheritance', 'Gang of Four'),
('Interface Inheritance', 'Gang of Four'),
('Composition vs Inheritance', 'Gang of Four'),
('Delegation', 'Gang of Four'),
('Aggregation', 'Gang of Four'),
('Acquaintance', 'Gang of Four'),
('Program to Interface', 'Gang of Four'),
('Favor Composition', 'Gang of Four'),
('Parameterized Types', 'Gang of Four'),
('Object Creation', 'Gang of Four'),
('Toolkit Design', 'Gang of Four'),
('Framework Design', 'Gang of Four'),
('White-box Reuse', 'Gang of Four'),
('Black-box Reuse', 'Gang of Four'),
('Class Libraries', 'Gang of Four'),
('Application Frameworks', 'Gang of Four'),
('Design for Change', 'Gang of Four'),
('Encapsulation', 'Gang of Four'),
('Abstraction Mechanisms', 'Gang of Four'),
('Inheritance Mechanisms', 'Gang of Four'),
('Implementation Hiding', 'Gang of Four'),
('Polymorphism', 'Gang of Four'),
('Dynamic Binding', 'Gang of Four'),
('Compile-time Binding', 'Gang of Four'),
('Runtime Binding', 'Gang of Four'),
('Class Hierarchies', 'Gang of Four'),
('Abstract Classes', 'Gang of Four'),
('Concrete Classes', 'Gang of Four'),
('Mix-in Classes', 'Gang of Four'),
('Parameterized Classes', 'Gang of Four'),
('Template Instantiation', 'Gang of Four'),
('Type Parameters', 'Gang of Four'),
('Recursive Types', 'Gang of Four'),
('Object References', 'Gang of Four'),
('Object Handles', 'Gang of Four'),
('Smart Pointers', 'Gang of Four'),
('Garbage Collection', 'Gang of Four'),
('Reference Counting', 'Gang of Four'),
('Memory Management', 'Gang of Four'),
('Resource Management', 'Gang of Four'),
('Exception Handling', 'Gang of Four'),
('Error Recovery', 'Gang of Four'),
('Consistency', 'Gang of Four'),
('Invariants', 'Gang of Four'),
('Preconditions', 'Gang of Four'),
('Postconditions', 'Gang of Four'),
('Design by Contract', 'Gang of Four'),
('Assertions', 'Gang of Four'),
('Documentation', 'Gang of Four');

-- Steve McConnell books (55 records)
INSERT INTO book (name, author) VALUES
('Code Complete', 'Steve McConnell'),
('Software Estimation', 'Steve McConnell'),
('Rapid Development', 'Steve McConnell'),
('Software Project Survival Guide', 'Steve McConnell'),
('Professional Software Development', 'Steve McConnell'),
('After the Gold Rush', 'Steve McConnell'),
('Managing Technical People', 'Steve McConnell'),
('Software Construction', 'Steve McConnell'),
('Code Quality', 'Steve McConnell'),
('Design in Construction', 'Steve McConnell'),
('Class Quality', 'Steve McConnell'),
('High-Quality Routines', 'Steve McConnell'),
('Defensive Programming', 'Steve McConnell'),
('Pseudocode Programming', 'Steve McConnell'),
('Variables', 'Steve McConnell'),
('Fundamental Data Types', 'Steve McConnell'),
('Unusual Data Types', 'Steve McConnell'),
('General Control Issues', 'Steve McConnell'),
('Conditional Statements', 'Steve McConnell'),
('Loops', 'Steve McConnell'),
('Unusual Control Structures', 'Steve McConnell'),
('Table-Driven Methods', 'Steve McConnell'),
('General Issues', 'Steve McConnell'),
('Layout and Style', 'Steve McConnell'),
('Self-Documenting Code', 'Steve McConnell'),
('Collaborative Construction', 'Steve McConnell'),
('Developer Testing', 'Steve McConnell'),
('Debugging', 'Steve McConnell'),
('Refactoring', 'Steve McConnell'),
('Code-Tuning Strategies', 'Steve McConnell'),
('Code-Tuning Techniques', 'Steve McConnell'),
('Software Quality', 'Steve McConnell'),
('Quality Improvement', 'Steve McConnell'),
('Tool Selection', 'Steve McConnell'),
('Layout Techniques', 'Steve McConnell'),
('Self-Documentation', 'Steve McConnell'),
('Commenting Techniques', 'Steve McConnell'),
('Integration', 'Steve McConnell'),
('Programming Tools', 'Steve McConnell'),
('Code Metrics', 'Steve McConnell'),
('Complexity Metrics', 'Steve McConnell'),
('Project Planning', 'Steve McConnell'),
('Schedule Estimation', 'Steve McConnell'),
('Effort Estimation', 'Steve McConnell'),
('Risk Management', 'Steve McConnell'),
('Project Tracking', 'Steve McConnell'),
('Change Control', 'Steve McConnell'),
('Configuration Management', 'Steve McConnell'),
('Requirements Management', 'Steve McConnell'),
('Architecture Design', 'Steve McConnell'),
('Detailed Design', 'Steve McConnell'),
('Construction Planning', 'Steve McConnell'),
('Software Evolution', 'Steve McConnell'),
('Maintenance', 'Steve McConnell'),
('Legacy System Evolution', 'Steve McConnell');

-- Andrew Hunt books (55 records)
INSERT INTO book (name, author) VALUES
('The Pragmatic Programmer', 'Andrew Hunt'),
('Pragmatic Thinking and Learning', 'Andrew Hunt'),
('Practices of an Agile Developer', 'Andrew Hunt'),
('Pragmatic Unit Testing', 'Andrew Hunt'),
('Pragmatic Version Control', 'Andrew Hunt'),
('Pragmatic Project Automation', 'Andrew Hunt'),
('Programming Ruby', 'Andrew Hunt'),
('Ship It!', 'Andrew Hunt'),
('Release It!', 'Andrew Hunt'),
('DRY Principle', 'Andrew Hunt'),
('Orthogonality', 'Andrew Hunt'),
('Reversibility', 'Andrew Hunt'),
('Tracer Bullets', 'Andrew Hunt'),
('Prototypes', 'Andrew Hunt'),
('Domain Languages', 'Andrew Hunt'),
('Estimating', 'Andrew Hunt'),
('Plain Text', 'Andrew Hunt'),
('Shell Games', 'Andrew Hunt'),
('Power Editing', 'Andrew Hunt'),
('Source Code Control', 'Andrew Hunt'),
('Debugging Strategies', 'Andrew Hunt'),
('Text Manipulation', 'Andrew Hunt'),
('Code Generators', 'Andrew Hunt'),
('Design by Contract', 'Andrew Hunt'),
('Dead Programs', 'Andrew Hunt'),
('Assertive Programming', 'Andrew Hunt'),
('When to Use Exceptions', 'Andrew Hunt'),
('How to Balance Resources', 'Andrew Hunt'),
('Decoupling and Law of Demeter', 'Andrew Hunt'),
('Metaprogramming', 'Andrew Hunt'),
('Temporal Coupling', 'Andrew Hunt'),
('Workflow', 'Andrew Hunt'),
('Architecture', 'Andrew Hunt'),
('Separation of Concerns', 'Andrew Hunt'),
('Organizing Teams', 'Andrew Hunt'),
('Ubiquitous Automation', 'Andrew Hunt'),
('Ruthless Testing', 'Andrew Hunt'),
('Test State Coverage', 'Andrew Hunt'),
('Testing the Tests', 'Andrew Hunt'),
('Property-Based Testing', 'Andrew Hunt'),
('Security Basics', 'Andrew Hunt'),
('Naming Things', 'Andrew Hunt'),
('Requirements Pit', 'Andrew Hunt'),
('Solving Impossible Puzzles', 'Andrew Hunt'),
('Working Together', 'Andrew Hunt'),
('Agile Essence', 'Andrew Hunt'),
('Pragmatic Starter Kit', 'Andrew Hunt'),
('Version Control', 'Andrew Hunt'),
('Regression Testing', 'Andrew Hunt'),
('Full Automation', 'Andrew Hunt'),
('Know Your IDE', 'Andrew Hunt'),
('Engineering Daybook', 'Andrew Hunt'),
('Good-Enough Software', 'Andrew Hunt'),
('Knowledge Portfolio', 'Andrew Hunt'),
('Communicate!', 'Andrew Hunt');
